---
import DefaultLayout from '../../layouts/DefaultLayout.astro'
import { Card, Pagination, Modal } from 'accessible-astro-components'

export async function getStaticPaths({ paginate }) {
  const response = await fetch('https://jsonplaceholder.typicode.com/posts')
  const data = await response.json()

  return paginate(data, { pageSize: 6 })
}

const { page } = Astro.props
const response = await fetch("http://localhost:3211");
const blogs = await response.json();
console.log(blogs);
---

<DefaultLayout
  title="Blog"
  description="An example of a blog with dynamic content fetched from JSONPlaceholder using the title, body and userId."
>
  <section class="my-12">
    <div class="space-content container">
      <h1><span class="text-gradient">Blog</span></h1>
      <p class="text-2xl">
        Halaman blog ini menawarkan pengalaman membaca yang nyaman dengan dukungan Light dan Dark Mode, memungkinkan pengunjung beralih antara mode terang dan gelap. Pengguna juga dapat <a href="#">menambahkan postingan baru</a> melalui antarmuka yang mudah digunakan. Dengan desain responsif, halaman ini dapat diakses dengan lancar di berbagai perangkat, baik desktop maupun mobile.
      </p>
    </div>
  </section>
  <section class="my-12">
    <div class="container">
      
      <!-- <p class="text-sm"><em>Post {page.start + 1} through {page.end + 1} of {page.total} total posts</em></p> -->
      <ul class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 my-3">
        {
          blogs.getBlog.data.map((blog: {
            postBlog: unknown;
            id: any;
            title: unknown;
            description: unknown;
            authors: unknown;
            created_at: unknown;
          }) => (
            <li key={blog.id} class="max-w-sm rounded overflow-hidden shadow-lg">
              <div class="card-container">
              <div class="card">
                <img src="https://media.istockphoto.com/id/1415243095/photo/an-open-book-on-purple-background.webp?a=1&b=1&s=612x612&w=0&k=20&c=vyQjr-X8tSXq6truzyuN6PLaKWSdiX6GJ9eqO__JPKE=" alt="Card Image">
                <div class="card-body">
                  <h3 class="card-title">{blog.title}</h3>
                  <i>Authors : {blog.authors}</i>
                  <p class="card-text">{blog.description}</p>
                  <button id={`modal2-trigger-${blog.id}`} class="card-button">Baca Selengkapnya</button>
                </div>
              </div>

      
              <Modal triggerId={`modal2-trigger-${blog.id}`} title={blog.title} closeText="Close Modal">
                <i>Authors: {blog.authors}</i>
                <p>{blog.description}</p>
                <p>{blog.postBlog}</p>
                <button class="button" onclick="closeModal()">Close</button>
              </Modal>
            </li>
          ))
        }
      </ul>
      
      
      
    </div>
    
  </section>
</DefaultLayout>

<style lang="scss">
  ul {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 4rem;

  @media (min-width: 550px) {
    grid-template-columns: repeat(2, 1fr);
    grid-gap: 2rem;
  }

  @media (min-width: 950px) {
    grid-template-columns: repeat(3, 1fr);
  }
}

.text-gradient {
  background: linear-gradient(315deg, var(--primary-200) 25%, var(--secondary-500));
  background-clip: border-box;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

/* Container untuk card */
.card-container {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
  gap: 20px;
  padding: 20px;
  max-width: 1200px;
  width: 100%;
}

/* Card style */
.card {
  border-radius: 10px;
  overflow: hidden;
  width: 100%;
  max-width: 300px;
  transition: transform 0.3s ease-in-out;
  /* Menghilangkan background */
  background-color: transparent; /* Ini memastikan card tidak memiliki background */
}

.card:hover {
  transform: scale(1.05);
}

.card img {
  width: 100%;
  height: 200px;
  object-fit: cover;
}

.card-body {
  padding: 20px;
}

.card-title {
  font-size: 1.5rem;
  margin-bottom: 10px;
}

.card-text {
  font-size: 1rem;
  color: #666;
  margin-bottom: 20px;
}

.card-button {
  padding: 10px 15px;
  border-radius: 5px;
  border: 1px solid black;
  cursor: pointer;
  text-align: center;
  display: block;
  width: 100%;
  text-decoration: none;
  background-color: transparent; /* Pastikan tombol juga tidak memiliki latar belakang */
}

/* Responsif: mengubah ukuran card saat layar lebih kecil */
@media (max-width: 768px) {
  .card-container {
    justify-content: center;
  }

  .card {
    max-width: 90%;
  }
}

@media (max-width: 480px) {
  .card {
    max-width: 100%;
  }

  .card-title {
    font-size: 1.2rem;
  }

  .card-text {
    font-size: 0.9rem;
  }
}

</style>
